#include "StageScene.h"
#include "Novice.h"

StageScene::StageScene() {}
StageScene::~StageScene() {}

//////////////////////////////////////////////////////////////////////////////////////////////////
// ↓　初期化処理
//////////////////////////////////////////////////////////////////////////////////////////////////

void StageScene::Init() {
	player_ = std::make_unique<Player>();
	player_->Init();

	boss_ = std::make_unique<Boss>();
	boss_->Init();

	playerBulletList_.clear();

	player_->SetStageScene(this);
}

//////////////////////////////////////////////////////////////////////////////////////////////////
// ↓　更新処理
//////////////////////////////////////////////////////////////////////////////////////////////////

void StageScene::Update() {
	// 更新
	player_->Update();
	boss_->Update();

	playerBulletList_.remove_if([](auto& bullet) {return bullet->GetIsDead(); });
	for (auto& bulllet : playerBulletList_) {
		bulllet->Update();
	}

	// 当たり判定
	Collision();

	// クリア判定
	if (boss_->GetIsDead()) {
		sceneNo_ = SCENE::CLEAR;
	}
}

//////////////////////////////////////////////////////////////////////////////////////////////////
// ↓　描画処理
//////////////////////////////////////////////////////////////////////////////////////////////////

void StageScene::Draw() {
	Novice::DrawBox(0, 0, 1280, 720, 0.0f, BLACK, kFillModeSolid);

	player_->Draw();
	boss_->Draw();

	for (auto& bulllet : playerBulletList_) {
		bulllet->Draw();
	}
}
//////////////////////////////////////////////////////////////////////////////////////////////////
// ↓　bulletの追加
//////////////////////////////////////////////////////////////////////////////////////////////////

void StageScene::AddBullet(const Vector2& pos) {
	auto& newBullet = playerBulletList_.emplace_back(std::make_unique<PlayerBullet>());
	newBullet->Init(pos);
}

//////////////////////////////////////////////////////////////////////////////////////////////////
// ↓　bulletの追加
//////////////////////////////////////////////////////////////////////////////////////////////////

void StageScene::Collision() {
	for (auto& bulllet : playerBulletList_) {
		float length = (bulllet->GetPos() - boss_->GetPos()).Length();

		if (length < bulllet->GetRadius() + boss_->GetRadius()) {
			bulllet->SetIsDead(true);
			boss_->DecreaseHp();
		}
	}
}
